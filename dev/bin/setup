#!/usr/bin/env bash

# Common / useful `set` commands
set -Ee # Exit on error
set -o pipefail # Check status of piped commands
set -u # Error on undefined vars
# set -x # Print commands (with expanded vars)
set -v # Print everything

# Development Setup (Poetry)
# ==============================================================================
# 
# This is a bit more involved than just \`poetry install\` due to the current
# version of cython _failing_ to build PyYAML 5.X:
# 
# https://github.com/alan-turing-institute/sqlsynthgen/issues/120#issuecomment-1641877671
# 
# pydoc-markdown is the issue, and an upgrade should fix it, but we're using a 
# speicfic version to match novella, so it may take some work and verification.
# 

# Prefered python version
python_version=3.11

# Use the latest of the preferred version (if we have pyenv and have one)
if pyenv latest "$python_version" > /dev/null; then
  PYENV_VERSION="$(pyenv latest "$python_version")" \
    poetry env use "$(pyenv which python)"
fi

# Upgrade pip so we don't hear about it every time we do something
poetry run pip install --upgrade pip

# Install whatever version of cython 2.x (3.0 being incompadible)
poetry run pip install "cython<3"

# Make sure we have wheel, which we usually already do
poetry run pip install wheel

# The kicker -- whatever `--no-build-isolation` does, it makes it use that 
# cython 2.x, which (should) work
poetry run pip install --no-build-isolation "pyyaml>=5.3,<6.0"

# proceed with standard install.
poetry install

# Development setup COMPLETE.
# 
# From here on out should just be able to `poetry install` without all this
# fuss.
# 
